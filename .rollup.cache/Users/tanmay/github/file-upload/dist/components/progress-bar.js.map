{"version":3,"file":"progress-bar.js","sourceRoot":"","sources":["../../src/components/file-upload/components/progress-bar.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAGb,OAAO,EAAE,EAAE,EAAE,MAAM,UAAU,CAAC;AAC9B,OAAO,EACL,gBAAgB,GAEjB,MAAM,wBAAwB,CAAC;AAShC,MAAM,CAAC,MAAM,WAAW,GAA+B,CAAC,EACtD,KAAK,EACL,IAAI,GAAG,IAAI,EACX,SAAS,EACT,SAAS,GAAG,KAAK,EACjB,MAAM,GAAG,WAAW,GACrB,EAAE,EAAE;IACH,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,SAAS;gBACZ,OAAO,cAAc,CAAC;YACxB,KAAK,OAAO;gBACV,OAAO,gBAAgB,CAAC;YAC1B,KAAK,WAAW;gBACd,OAAO,YAAY,CAAC;YACtB;gBACE,OAAO,qBAAqB,CAAC;QACjC,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAEvD,OAAO,CACL,eAAK,SAAS,EAAE,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,aACrC,cAAK,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,EAAE,CAAC,YACxC,cACE,SAAS,EAAE,EAAE,CACX,0DAA0D,EAC1D,cAAc,EAAE,CACjB,EACD,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,YAAY,GAAG,EAAE,GACpC,GACE,EACL,SAAS,IAAI,CACZ,eAAK,SAAS,EAAC,sEAAsE,aACnF,eAAM,SAAS,EAAC,YAAY,YAAE,MAAM,GAAQ,EAC5C,2BAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,IACpC,CACP,IACG,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"../utils\";\nimport {\n  progressVariants,\n  type ProgressVariantProps,\n} from \"./file-upload-variants\";\n\ninterface ProgressBarProps extends ProgressVariantProps {\n  value: number; // 0-100\n  className?: string;\n  showLabel?: boolean;\n  status?: \"pending\" | \"uploading\" | \"success\" | \"error\";\n}\n\nexport const ProgressBar: React.FC<ProgressBarProps> = ({\n  value,\n  size = \"md\",\n  className,\n  showLabel = false,\n  status = \"uploading\",\n}) => {\n  const getStatusColor = () => {\n    switch (status) {\n      case \"success\":\n        return \"bg-green-500\";\n      case \"error\":\n        return \"bg-destructive\";\n      case \"uploading\":\n        return \"bg-primary\";\n      default:\n        return \"bg-muted-foreground\";\n    }\n  };\n\n  const clampedValue = Math.min(100, Math.max(0, value));\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <div className={progressVariants({ size })}>\n        <div\n          className={cn(\n            \"h-full transition-all duration-300 ease-out rounded-full\",\n            getStatusColor()\n          )}\n          style={{ width: `${clampedValue}%` }}\n        />\n      </div>\n      {showLabel && (\n        <div className=\"flex justify-between items-center mt-1 text-xs text-muted-foreground\">\n          <span className=\"capitalize\">{status}</span>\n          <span>{Math.round(clampedValue)}%</span>\n        </div>\n      )}\n    </div>\n  );\n};\n"]}