{"version":3,"file":"file-upload-renderer.js","sourceRoot":"","sources":["../../src/components/file-upload/components/file-upload-renderer.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { FileUpload } from \"./file-upload\";\nimport { getConfig } from \"../config/default-configs\";\nimport type {\n  FileUploadRendererProps,\n  FileUploadConfig,\n  FileUploadPreset,\n  FileWithPreview,\n} from \"../types\";\nimport { validateConfig } from \"../config/default-configs\";\n\n/**\n * Config-driven FileUpload renderer\n * Renders a FileUpload component based on a JSON configuration\n */\nexport const FileUploadRenderer: React.FC<FileUploadRendererProps> = ({\n  config,\n  className,\n  onFilesChange,\n  onFilesAdded,\n  onError,\n  initialFiles,\n  ...props\n}) => {\n  // Validate configuration\n  const configErrors = validateConfig(config);\n  if (configErrors.length > 0) {\n    console.warn(\"FileUpload configuration errors:\", configErrors);\n  }\n\n  return (\n    <FileUpload\n      variant={config.variant}\n      size={config.size}\n      radius={config.radius}\n      multiple={config.multiple}\n      maxFiles={config.maxFiles}\n      maxSize={config.maxSize}\n      accept={config.accept}\n      disabled={config.disabled}\n      showPreview={config.showPreview}\n      allowRemove={config.allowRemove}\n      labels={config.labels}\n      className={className}\n      onFilesChange={onFilesChange}\n      onFilesAdded={onFilesAdded}\n      onError={onError}\n      initialFiles={initialFiles}\n      {...props}\n    />\n  );\n};\n\n/**\n * Preset-based FileUpload renderer\n * Renders a FileUpload component using a preset configuration with optional overrides\n */\nexport interface FileUploadPresetRendererProps {\n  preset: FileUploadPreset;\n  overrides?: Omit<Partial<FileUploadConfig>, \"labels\"> & {\n    labels?: Partial<FileUploadConfig[\"labels\"]>;\n  };\n  className?: string;\n  onFilesChange?: (files: FileWithPreview[]) => void;\n  onFilesAdded?: (files: FileWithPreview[]) => void;\n  onError?: (errors: string[]) => void;\n  initialFiles?: FileWithPreview[];\n}\n\nexport const FileUploadPresetRenderer: React.FC<\n  FileUploadPresetRendererProps\n> = ({ preset, overrides = {}, ...props }) => {\n  const config = getConfig(preset, overrides);\n\n  return <FileUploadRenderer config={config} {...props} />;\n};\n\n/**\n * JSON-based FileUpload renderer\n * Renders a FileUpload component from a JSON string configuration\n */\nexport interface FileUploadJSONRendererProps {\n  configJSON: string;\n  fallbackPreset?: FileUploadPreset;\n  className?: string;\n  onFilesChange?: (files: FileWithPreview[]) => void;\n  onFilesAdded?: (files: FileWithPreview[]) => void;\n  onError?: (errors: string[]) => void;\n  onConfigError?: (error: string) => void;\n  initialFiles?: FileWithPreview[];\n}\n\nexport const FileUploadJSONRenderer: React.FC<FileUploadJSONRendererProps> = ({\n  configJSON,\n  fallbackPreset = \"default\",\n  onConfigError,\n  ...props\n}) => {\n  const [config, setConfig] = React.useState<FileUploadConfig | null>(null);\n  const [error, setError] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    try {\n      const parsedConfig = JSON.parse(configJSON) as Omit<\n        Partial<FileUploadConfig>,\n        \"labels\"\n      > & {\n        labels?: Partial<FileUploadConfig[\"labels\"]>;\n      };\n      const fullConfig = getConfig(\"default\", parsedConfig);\n\n      // Validate the configuration\n      const configErrors = validateConfig(parsedConfig);\n      if (configErrors.length > 0) {\n        const errorMessage = `Configuration errors: ${configErrors.join(\", \")}`;\n        setError(errorMessage);\n        onConfigError?.(errorMessage);\n        // Use fallback preset on error\n        setConfig(getConfig(fallbackPreset));\n      } else {\n        setConfig(fullConfig);\n        setError(null);\n      }\n    } catch (parseError) {\n      const errorMessage = `Invalid JSON configuration: ${\n        parseError instanceof Error ? parseError.message : \"Unknown error\"\n      }`;\n      setError(errorMessage);\n      onConfigError?.(errorMessage);\n      // Use fallback preset on error\n      setConfig(getConfig(fallbackPreset));\n    }\n  }, [configJSON, fallbackPreset, onConfigError]);\n\n  if (!config) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {error && (\n        <div className=\"mb-4 p-3 bg-destructive/10 border border-destructive/20 rounded-md\">\n          <div className=\"text-sm text-destructive font-medium\">\n            Configuration Error\n          </div>\n          <div className=\"text-xs text-destructive/80 mt-1\">{error}</div>\n          <div className=\"text-xs text-muted-foreground mt-1\">\n            Using fallback preset: {fallbackPreset}\n          </div>\n        </div>\n      )}\n      <FileUploadRenderer config={config} {...props} />\n    </div>\n  );\n};\n\n/**\n * Hook for managing file upload configuration\n */\nexport function useFileUploadConfig(initialConfig?: Partial<FileUploadConfig>) {\n  const [config, setConfig] = React.useState<FileUploadConfig>(() =>\n    getConfig(\"default\", initialConfig)\n  );\n\n  const updateConfig = React.useCallback(\n    (updates: Partial<FileUploadConfig>) => {\n      setConfig((current) => getConfig(\"default\", { ...current, ...updates }));\n    },\n    []\n  );\n\n  const resetConfig = React.useCallback(\n    (preset: FileUploadPreset = \"default\") => {\n      setConfig(getConfig(preset));\n    },\n    []\n  );\n\n  const exportConfig = React.useCallback(() => {\n    return JSON.stringify(config, null, 2);\n  }, [config]);\n\n  const importConfig = React.useCallback((configJSON: string) => {\n    try {\n      const parsedConfig = JSON.parse(configJSON) as Partial<FileUploadConfig>;\n      const configErrors = validateConfig(parsedConfig);\n\n      if (configErrors.length > 0) {\n        throw new Error(`Configuration errors: ${configErrors.join(\", \")}`);\n      }\n\n      setConfig(getConfig(\"default\", parsedConfig));\n      return { success: true, error: null };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }, []);\n\n  return {\n    config,\n    updateConfig,\n    resetConfig,\n    exportConfig,\n    importConfig,\n  };\n}\n"]}